<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd"
       default-lazy-init="false">

    <!--&lt;!&ndash; 加载配置文件 &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:redis.properties" />-->
    <!--&lt;!&ndash; redis数据源 &ndash;&gt;-->
    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--&lt;!&ndash; 最大空闲数 &ndash;&gt;-->
    <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
    <!--&lt;!&ndash; 最大空连接数 &ndash;&gt;-->
    <!--<property name="maxTotal" value="${redis.maxTotal}" />-->
    <!--&lt;!&ndash; 最大等待时间 &ndash;&gt;-->
    <!--<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />-->
    <!--&lt;!&ndash; 连接超时时是否阻塞，false时报异常,ture阻塞直到超时, 默认true &ndash;&gt;-->
    <!--<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />-->
    <!--&lt;!&ndash; 返回连接时，检测连接是否成功 &ndash;&gt;-->
    <!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; Spring-redis连接池管理工厂 &ndash;&gt;-->
    <!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
    <!--&lt;!&ndash; IP地址 &ndash;&gt;-->
    <!--<property name="hostName" value="${redis.host}" />-->
    <!--&lt;!&ndash; 端口号 &ndash;&gt;-->
    <!--<property name="port" value="${redis.port}" />-->
    <!--&lt;!&ndash; 超时时间 默认2000&ndash;&gt;-->
    <!--<property name="timeout" value="${redis.timeout}" />-->
    <!--&lt;!&ndash; 连接池配置引用 &ndash;&gt;-->
    <!--<property name="poolConfig" ref="poolConfig" />-->
    <!--&lt;!&ndash; usePool：是否使用连接池 &ndash;&gt;-->
    <!--<property name="usePool" value="true"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; redis template definition &ndash;&gt;-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
    <!--<property name="connectionFactory" ref="jedisConnectionFactory" />-->
    <!--<property name="keySerializer">-->
    <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
    <!--</property>-->
    <!--<property name="valueSerializer">-->
    <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
    <!--</property>-->
    <!--<property name="hashKeySerializer">-->
    <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
    <!--</property>-->
    <!--<property name="hashValueSerializer">-->
    <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
    <!--</property>-->
    <!--&lt;!&ndash;开启事务  &ndash;&gt;-->
    <!--<property name="enableTransactionSupport" value="true"></property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;自定义redis工具类,在需要缓存的地方注入此类  &ndash;&gt;-->
    <!--<bean id="redisrCacheManager" class="com.flyme.utils.RedisCacheManager">-->
    <!--<property name="redisTemplate" ref="redisTemplate" />-->
    <!--</bean>-->
</beans>