<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yn.mapper.ComMapper" >
  <resultMap id="BaseResultMap" type="com.yn.entity.Com" >
    <id column="port_number" property="portNumber" jdbcType="INTEGER" />
    <result column="send_delay" property="sendDelay" jdbcType="INTEGER" />
    <result column="recv_timeout" property="recvTimeout" jdbcType="INTEGER" />
    <result column="baud_rate" property="baudRate" jdbcType="INTEGER" />
    <result column="parity" property="parity" jdbcType="VARCHAR" />
    <result column="data_bits" property="dataBits" jdbcType="INTEGER" />
    <result column="stop_bits" property="stopBits" jdbcType="FLOAT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    port_number, send_delay, recv_timeout, baud_rate, parity, data_bits, stop_bits
  </sql>
  <select id="selectByExample" resultType="java.util.LinkedHashMap" parameterType="com.yn.entity.ComExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from com
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="lastCount != null or lastCount == 0">
      limit #{lastCount} ,
      <if test="pageSize != null and pageSize != ''">
        #{pageSize}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from com
    where port_number = #{portNumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from com
    where port_number = #{portNumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yn.entity.ComExample" >
    delete from com
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yn.entity.Com" >
    insert into com (port_number, send_delay, recv_timeout, 
      baud_rate, parity, data_bits, 
      stop_bits)
    values (#{portNumber,jdbcType=INTEGER}, #{sendDelay,jdbcType=INTEGER}, #{recvTimeout,jdbcType=INTEGER}, 
      #{baudRate,jdbcType=INTEGER}, #{parity,jdbcType=VARCHAR}, #{dataBits,jdbcType=INTEGER}, 
      #{stopBits,jdbcType=FLOAT})
  </insert>
  <insert id="insertSelective" parameterType="com.yn.entity.Com" >
    insert into com
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="portNumber != null" >
        port_number,
      </if>
      <if test="sendDelay != null" >
        send_delay,
      </if>
      <if test="recvTimeout != null" >
        recv_timeout,
      </if>
      <if test="baudRate != null" >
        baud_rate,
      </if>
      <if test="parity != null" >
        parity,
      </if>
      <if test="dataBits != null" >
        data_bits,
      </if>
      <if test="stopBits != null" >
        stop_bits,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="portNumber != null" >
        #{portNumber,jdbcType=INTEGER},
      </if>
      <if test="sendDelay != null" >
        #{sendDelay,jdbcType=INTEGER},
      </if>
      <if test="recvTimeout != null" >
        #{recvTimeout,jdbcType=INTEGER},
      </if>
      <if test="baudRate != null" >
        #{baudRate,jdbcType=INTEGER},
      </if>
      <if test="parity != null" >
        #{parity,jdbcType=VARCHAR},
      </if>
      <if test="dataBits != null" >
        #{dataBits,jdbcType=INTEGER},
      </if>
      <if test="stopBits != null" >
        #{stopBits,jdbcType=FLOAT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yn.entity.ComExample" resultType="java.lang.Integer" >
    select count(*) from com
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update com
    <set >
      <if test="record.portNumber != null" >
        port_number = #{record.portNumber,jdbcType=INTEGER},
      </if>
      <if test="record.sendDelay != null" >
        send_delay = #{record.sendDelay,jdbcType=INTEGER},
      </if>
      <if test="record.recvTimeout != null" >
        recv_timeout = #{record.recvTimeout,jdbcType=INTEGER},
      </if>
      <if test="record.baudRate != null" >
        baud_rate = #{record.baudRate,jdbcType=INTEGER},
      </if>
      <if test="record.parity != null" >
        parity = #{record.parity,jdbcType=VARCHAR},
      </if>
      <if test="record.dataBits != null" >
        data_bits = #{record.dataBits,jdbcType=INTEGER},
      </if>
      <if test="record.stopBits != null" >
        stop_bits = #{record.stopBits,jdbcType=FLOAT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update com
    set port_number = #{record.portNumber,jdbcType=INTEGER},
      send_delay = #{record.sendDelay,jdbcType=INTEGER},
      recv_timeout = #{record.recvTimeout,jdbcType=INTEGER},
      baud_rate = #{record.baudRate,jdbcType=INTEGER},
      parity = #{record.parity,jdbcType=VARCHAR},
      data_bits = #{record.dataBits,jdbcType=INTEGER},
      stop_bits = #{record.stopBits,jdbcType=FLOAT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yn.entity.Com" >
    update com
    <set >
      <if test="sendDelay != null" >
        send_delay = #{sendDelay,jdbcType=INTEGER},
      </if>
      <if test="recvTimeout != null" >
        recv_timeout = #{recvTimeout,jdbcType=INTEGER},
      </if>
      <if test="baudRate != null" >
        baud_rate = #{baudRate,jdbcType=INTEGER},
      </if>
      <if test="parity != null" >
        parity = #{parity,jdbcType=VARCHAR},
      </if>
      <if test="dataBits != null" >
        data_bits = #{dataBits,jdbcType=INTEGER},
      </if>
      <if test="stopBits != null" >
        stop_bits = #{stopBits,jdbcType=FLOAT},
      </if>
    </set>
    where port_number = #{portNumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yn.entity.Com" >
    update com
    set send_delay = #{sendDelay,jdbcType=INTEGER},
      recv_timeout = #{recvTimeout,jdbcType=INTEGER},
      baud_rate = #{baudRate,jdbcType=INTEGER},
      parity = #{parity,jdbcType=VARCHAR},
      data_bits = #{dataBits,jdbcType=INTEGER},
      stop_bits = #{stopBits,jdbcType=FLOAT}
    where port_number = #{portNumber,jdbcType=INTEGER}
  </update>
</mapper>