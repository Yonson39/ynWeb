// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `RpcService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package YNRPC;

public interface ISystemControlPrx extends Ice.ObjectPrx
{
    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     **/
    public Result newProject();

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result newProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject();

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(Ice.Callback __cb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(Callback_ISystemControl_newProject __cb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(java.util.Map<String, String> __ctx, Callback_ISystemControl_newProject __cb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                            IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(java.util.Map<String, String> __ctx,
                                            IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_newProject(java.util.Map<String, String> __ctx,
                                            IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                            IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 创建新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __result The asynchronous result object.
     **/
    public Result end_newProject(Ice.AsyncResult __result);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     **/
    public Result saveProject();

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result saveProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject();

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(Ice.Callback __cb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(Callback_ISystemControl_saveProject __cb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(java.util.Map<String, String> __ctx, Callback_ISystemControl_saveProject __cb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_saveProject(java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 保存新工程
     * Input:
     * Output: 
     * Return:
     * Others:
     * @param __result The asynchronous result object.
     **/
    public Result end_saveProject(Ice.AsyncResult __result);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     **/
    public Result exportProject(Ice.StringHolder fileName);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result exportProject(Ice.StringHolder fileName, java.util.Map<String, String> __ctx);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject();

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(Ice.Callback __cb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(Callback_ISystemControl_exportProject __cb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(java.util.Map<String, String> __ctx, Callback_ISystemControl_exportProject __cb);

    public interface FunctionalCallback_ISystemControl_exportProject_Response
    {
        void apply(Result __ret, String fileName);
    }

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(FunctionalCallback_ISystemControl_exportProject_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(FunctionalCallback_ISystemControl_exportProject_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(java.util.Map<String, String> __ctx,
                                               FunctionalCallback_ISystemControl_exportProject_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_exportProject(java.util.Map<String, String> __ctx,
                                               FunctionalCallback_ISystemControl_exportProject_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 导出工程到文件
     * Input:
     * Output: fileName 导出后工程文件名，全路径
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_exportProject(Ice.StringHolder fileName, Ice.AsyncResult __result);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     **/
    public Result importProject(String fileName);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result importProject(String fileName, java.util.Map<String, String> __ctx);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName, java.util.Map<String, String> __ctx);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName, Ice.Callback __cb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName, Callback_ISystemControl_importProject __cb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName, java.util.Map<String, String> __ctx, Callback_ISystemControl_importProject __cb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName,
                                               IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName,
                                               IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName,
                                               java.util.Map<String, String> __ctx,
                                               IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_importProject(String fileName,
                                               java.util.Map<String, String> __ctx,
                                               IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 从文件导入工程
     * Input: fileName 导入工程的文件名，全路径
     * Output: 
     * Return:
     * Others: 当前工程将被覆盖
     * @param __result The asynchronous result object.
     **/
    public Result end_importProject(Ice.AsyncResult __result);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     **/
    public Result startProject();

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result startProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject();

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(Ice.Callback __cb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(Callback_ISystemControl_startProject __cb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(java.util.Map<String, String> __ctx, Callback_ISystemControl_startProject __cb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(java.util.Map<String, String> __ctx,
                                              IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startProject(java.util.Map<String, String> __ctx,
                                              IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 启动工程
     * Input: 
     * Output: 
     * Return:
     * Others: 如有工程在运行将返回错误
     * @param __result The asynchronous result object.
     **/
    public Result end_startProject(Ice.AsyncResult __result);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     **/
    public Result stopProject();

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result stopProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject();

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(java.util.Map<String, String> __ctx);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(Ice.Callback __cb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(Callback_ISystemControl_stopProject __cb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(java.util.Map<String, String> __ctx, Callback_ISystemControl_stopProject __cb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopProject(java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 停止当前运行工程
     * Input: 
     * Output: 
     * Return:
     * Others: 停止当前运行工程
     * @param __result The asynchronous result object.
     **/
    public Result end_stopProject(Ice.AsyncResult __result);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     **/
    public Result rebootBox();

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result rebootBox(java.util.Map<String, String> __ctx);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox();

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(java.util.Map<String, String> __ctx);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(Ice.Callback __cb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(Callback_ISystemControl_rebootBox __cb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(java.util.Map<String, String> __ctx, Callback_ISystemControl_rebootBox __cb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(java.util.Map<String, String> __ctx,
                                           IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rebootBox(java.util.Map<String, String> __ctx,
                                           IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 重启盒子系统
     * Input: 
     * Output: 
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_rebootBox(Ice.AsyncResult __result);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     **/
    public Result startDevice(String deviceName);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result startDevice(String deviceName, java.util.Map<String, String> __ctx);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName, java.util.Map<String, String> __ctx);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName, Ice.Callback __cb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName, Callback_ISystemControl_startDevice __cb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName, java.util.Map<String, String> __ctx, Callback_ISystemControl_startDevice __cb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName,
                                             java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_startDevice(String deviceName,
                                             java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 启动单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 如工程配置此设备为非激状态，启动将失败。
     * @param __result The asynchronous result object.
     **/
    public Result end_startDevice(Ice.AsyncResult __result);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     **/
    public Result stopDevice(String deviceName);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result stopDevice(String deviceName, java.util.Map<String, String> __ctx);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName, java.util.Map<String, String> __ctx);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName, Ice.Callback __cb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName, Callback_ISystemControl_stopDevice __cb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName, java.util.Map<String, String> __ctx, Callback_ISystemControl_stopDevice __cb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName,
                                            IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName,
                                            IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                            IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName,
                                            java.util.Map<String, String> __ctx,
                                            IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_stopDevice(String deviceName,
                                            java.util.Map<String, String> __ctx,
                                            IceInternal.Functional_GenericCallback1<Result> __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                            IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 停止单个设备
     * Input: deviceName设备名称
     * Output: 
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_stopDevice(Ice.AsyncResult __result);
}
