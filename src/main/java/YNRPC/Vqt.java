// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `RpcCommon.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package YNRPC;

public class Vqt implements Cloneable, java.io.Serializable
{
    public Variant v;

    public Quality q;

    public long t;

    public Vqt()
    {
        q = Quality.QUNCERTAIN;
    }

    public Vqt(Variant v, Quality q, long t)
    {
        this.v = v;
        this.q = q;
        this.t = t;
    }

    public boolean
    equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Vqt _r = null;
        if(rhs instanceof Vqt)
        {
            _r = (Vqt)rhs;
        }

        if(_r != null)
        {
            if(v != _r.v)
            {
                if(v == null || _r.v == null || !v.equals(_r.v))
                {
                    return false;
                }
            }
            if(q != _r.q)
            {
                if(q == null || _r.q == null || !q.equals(_r.q))
                {
                    return false;
                }
            }
            if(t != _r.t)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::YNRPC::Vqt");
        __h = IceInternal.HashUtil.hashAdd(__h, v);
        __h = IceInternal.HashUtil.hashAdd(__h, q);
        __h = IceInternal.HashUtil.hashAdd(__h, t);
        return __h;
    }

    public Vqt
    clone()
    {
        Vqt c = null;
        try
        {
            c = (Vqt)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeObject(v);
        Quality.__write(__os, q);
        __os.writeLong(t);
    }

    private class Patcher implements IceInternal.Patcher
    {
        public void
        patch(Ice.Object v)
        {
            if(v == null || v instanceof Variant)
            {
                v = (Variant)v;
            }
            else
            {
                IceInternal.Ex.throwUOE(type(), v);
            }
        }

        public String
        type()
        {
            return "::YNRPC::Variant";
        }
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        __is.readObject(new Patcher());
        q = Quality.__read(__is);
        t = __is.readLong();
    }

    static public void
    __write(IceInternal.BasicStream __os, Vqt __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public Vqt
    __read(IceInternal.BasicStream __is, Vqt __v)
    {
        if(__v == null)
        {
             __v = new Vqt();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final Vqt __nullMarshalValue = new Vqt();

    public static final long serialVersionUID = 1026493594L;
}
