// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `RpcService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package YNRPC;

public interface IDataMonitorPrx extends Ice.ObjectPrx
{
    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     **/
    public Result getDevicesState(DeviceInfoListHolder states);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result getDevicesState(DeviceInfoListHolder states, java.util.Map<String, String> __ctx);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState();

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(java.util.Map<String, String> __ctx);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(Ice.Callback __cb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(Callback_IDataMonitor_getDevicesState __cb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(java.util.Map<String, String> __ctx, Callback_IDataMonitor_getDevicesState __cb);

    public interface FunctionalCallback_IDataMonitor_getDevicesState_Response
    {
        void apply(Result __ret, DeviceInfo[] states);
    }

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(FunctionalCallback_IDataMonitor_getDevicesState_Response __responseCb,
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(FunctionalCallback_IDataMonitor_getDevicesState_Response __responseCb,
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(java.util.Map<String, String> __ctx,
                                                 FunctionalCallback_IDataMonitor_getDevicesState_Response __responseCb,
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getDevicesState(java.util.Map<String, String> __ctx,
                                                 FunctionalCallback_IDataMonitor_getDevicesState_Response __responseCb,
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 获得设备状态
     * Input: 
     * Output: states 返回设备状态列表
     * Return:
     * Others: 将返回全部设备的运行状态
     * @param __result The asynchronous result object.
     **/
    public Result end_getDevicesState(DeviceInfoListHolder states, Ice.AsyncResult __result);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     **/
    public Result queryPointIds(String[] ptNames, PointIdListHolder ptIds);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result queryPointIds(String[] ptNames, PointIdListHolder ptIds, java.util.Map<String, String> __ctx);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames, java.util.Map<String, String> __ctx);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames, Ice.Callback __cb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames, Callback_IDataMonitor_queryPointIds __cb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames, java.util.Map<String, String> __ctx, Callback_IDataMonitor_queryPointIds __cb);

    public interface FunctionalCallback_IDataMonitor_queryPointIds_Response
    {
        void apply(Result __ret, int[] ptIds);
    }

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames,
                                               FunctionalCallback_IDataMonitor_queryPointIds_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames,
                                               FunctionalCallback_IDataMonitor_queryPointIds_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames,
                                               java.util.Map<String, String> __ctx,
                                               FunctionalCallback_IDataMonitor_queryPointIds_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryPointIds(String[] ptNames,
                                               java.util.Map<String, String> __ctx,
                                               FunctionalCallback_IDataMonitor_queryPointIds_Response __responseCb,
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 转换点名为点ID(使用ID可提高点查询效率)
     * Input: ptNames 点名列表
     * Output: ptIds 返回点ID列表，如ID为-1表示无此点
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_queryPointIds(PointIdListHolder ptIds, Ice.AsyncResult __result);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     **/
    public Result queryRealDatas(int[] ptIds, RvqtListHolder values);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result queryRealDatas(int[] ptIds, RvqtListHolder values, java.util.Map<String, String> __ctx);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds, java.util.Map<String, String> __ctx);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds, Ice.Callback __cb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds, Callback_IDataMonitor_queryRealDatas __cb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds, java.util.Map<String, String> __ctx, Callback_IDataMonitor_queryRealDatas __cb);

    public interface FunctionalCallback_IDataMonitor_queryRealDatas_Response
    {
        void apply(Result __ret, Rvqt[] values);
    }

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds,
                                                FunctionalCallback_IDataMonitor_queryRealDatas_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds,
                                                FunctionalCallback_IDataMonitor_queryRealDatas_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds,
                                                java.util.Map<String, String> __ctx,
                                                FunctionalCallback_IDataMonitor_queryRealDatas_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryRealDatas(int[] ptIds,
                                                java.util.Map<String, String> __ctx,
                                                FunctionalCallback_IDataMonitor_queryRealDatas_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 使用点ID查询点的实时值
     * Input: ptIds 点ID列表
     * Output: values 点实时值列表
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_queryRealDatas(RvqtListHolder values, Ice.AsyncResult __result);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     **/
    public Result queryDeviceDataFrames(String devName, int inId, int limit, StringListHolder msgs, Ice.IntHolder outId);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result queryDeviceDataFrames(String devName, int inId, int limit, StringListHolder msgs, Ice.IntHolder outId, java.util.Map<String, String> __ctx);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName, int inId, int limit);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName, int inId, int limit, java.util.Map<String, String> __ctx);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName, int inId, int limit, Ice.Callback __cb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName, int inId, int limit, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName, int inId, int limit, Callback_IDataMonitor_queryDeviceDataFrames __cb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName, int inId, int limit, java.util.Map<String, String> __ctx, Callback_IDataMonitor_queryDeviceDataFrames __cb);

    public interface FunctionalCallback_IDataMonitor_queryDeviceDataFrames_Response
    {
        void apply(Result __ret, String[] msgs, int outId);
    }

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName,
                                                       int inId,
                                                       int limit,
                                                       FunctionalCallback_IDataMonitor_queryDeviceDataFrames_Response __responseCb,
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName,
                                                       int inId,
                                                       int limit,
                                                       FunctionalCallback_IDataMonitor_queryDeviceDataFrames_Response __responseCb,
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName,
                                                       int inId,
                                                       int limit,
                                                       java.util.Map<String, String> __ctx,
                                                       FunctionalCallback_IDataMonitor_queryDeviceDataFrames_Response __responseCb,
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceDataFrames(String devName,
                                                       int inId,
                                                       int limit,
                                                       java.util.Map<String, String> __ctx,
                                                       FunctionalCallback_IDataMonitor_queryDeviceDataFrames_Response __responseCb,
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 查询设备的通信数据帧
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_queryDeviceDataFrames(StringListHolder msgs, Ice.IntHolder outId, Ice.AsyncResult __result);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     **/
    public Result querySystemLog(int inId, int limit, StringListHolder msgs, Ice.IntHolder outId);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     **/
    public Result querySystemLog(int inId, int limit, StringListHolder msgs, Ice.IntHolder outId, java.util.Map<String, String> __ctx);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId, int limit);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId, int limit, java.util.Map<String, String> __ctx);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId, int limit, Ice.Callback __cb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId, int limit, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId, int limit, Callback_IDataMonitor_querySystemLog __cb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId, int limit, java.util.Map<String, String> __ctx, Callback_IDataMonitor_querySystemLog __cb);

    public interface FunctionalCallback_IDataMonitor_querySystemLog_Response
    {
        void apply(Result __ret, String[] msgs, int outId);
    }

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId,
                                                int limit,
                                                FunctionalCallback_IDataMonitor_querySystemLog_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId,
                                                int limit,
                                                FunctionalCallback_IDataMonitor_querySystemLog_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId,
                                                int limit,
                                                java.util.Map<String, String> __ctx,
                                                FunctionalCallback_IDataMonitor_querySystemLog_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_querySystemLog(int inId,
                                                int limit,
                                                java.util.Map<String, String> __ctx,
                                                FunctionalCallback_IDataMonitor_querySystemLog_Response __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * Description: 查询系统日志
     * Input: devName 设备名
     * inId 查询位置，第一次调用此参数使用0，再次调用使用上次调用返回的outId参数
     * limit 查询数据帧的最大数量
     * Output: msgs 返回查询的数据帧内容，字符串的数组
     * outId 返回查询的ID
     * Return:
     * Others: 
     * @param __result The asynchronous result object.
     **/
    public Result end_querySystemLog(StringListHolder msgs, Ice.IntHolder outId, Ice.AsyncResult __result);
}
